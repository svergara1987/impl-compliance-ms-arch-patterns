#!/usr/bin/env python3

import os
import sys
import argparse
import datetime
from lxml import etree # https://lxml.de/tutorial.html
import probcli_global

PROGRAM_NAME = 'probcli_merger.py'

def get_echo(args):
    return 'Executing {} with arguments: --input={} --output={}'.format(PROGRAM_NAME,args.input,args.output)

def join_files(list_input_files,output_file_name):
    new_extended_test_suite = etree.Element('extended_test_suite')
    new_extended_test_suite.text = '\n\t'
    for a_xml_file in list_input_files:
        parsed_xml = etree.parse(a_xml_file)
        probcli_global.get_logger().debug('parsing file \'{}\''.format(a_xml_file))
        extended_test_suite = parsed_xml.getroot()
        count_test_cases = 0
        for a_test_case in extended_test_suite.findall('test_case'):
            new_extended_test_suite.append(a_test_case)
            count_test_cases += 1
        probcli_global.get_logger().debug('found {} test cases in file {}'.format(count_test_cases, a_xml_file))
    probcli_global.get_logger().debug('preparing to generate output file')
    tree = etree.ElementTree(new_extended_test_suite)
    tree.write(output_file_name, xml_declaration=True, pretty_print=True, encoding='utf-8')


def get_timestamp():
    return datetime.datetime.today().strftime('%Y%m%dT%H%M%S%f')[:-3]


def main():
    ## start arguments handling 
    # https://stackabuse.com/command-line-arguments-in-python/
    # https://docs.python.org/3/library/argparse.html#name-or-flags
    parser = argparse.ArgumentParser(prog=PROGRAM_NAME, epilog='Usage example: python3 {} -i test_closed.xml test_half_open.xml test_open.xml -o test_merged.xml'.format(PROGRAM_NAME))
    parser.add_argument('-v', '--verbose', help='enables verbose mode', action='store_true')
    parser.add_argument("-i", "--input", help='xml file generated by probcli containing test cases to be merged', nargs='+')    
    parser.add_argument("-o", "--output", help='name of the output file containing the merged test cases', default='{}_merged_test_cases.xml'.format(get_timestamp()))
    args = parser.parse_args()
    # print(vars(args))
    ## end arguments handling

    probcli_global.get_logger().debug(get_echo(args))
    join_files(args.input,args.output)

    probcli_global.get_logger().debug('files {} merged into {}'.format(args.input,args.output))

if __name__ == '__main__':
    main()
