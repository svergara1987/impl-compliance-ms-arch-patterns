<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1578179311609" org.eventb.texttools.text_representation="machine circuit_breaker_v2 sees circuit_breaker_cxt_v2&#10;&#10;variables consecutive_errors // represents the amount of consecutive errors&#10;          circuit_breaker // represents the state of the circuit breaker&#10;          time // represents current time, always moving forward&#10;          timestamp_cb_trips // represents the timestap since when the circuit breaker trips&#10;          test_request_to_go // represents the amount of test request that must respond ok during the HALF_OPEN state to switch to the CLOSED state&#10;&#10;&#10;invariants&#10;  @inv1 time ∈ ℕ&#10;  @inv2 timestamp_cb_trips ∈ ℕ&#10;  @inv3 consecutive_errors ∈ ℕ&#10;  @inv4 circuit_breaker ∈ CIRCUIT_BREAKER_STATE&#10;  @inv5 test_request_to_go ∈ ℕ&#10;&#10;events&#10;  event INITIALISATION&#10;    then&#10;      @init1 time ≔ 0&#10;      @init2 timestamp_cb_trips ≔ 0&#10;      @init3 consecutive_errors ≔ 0&#10;      @init4 circuit_breaker ≔ CLOSED&#10;      @init5 test_request_to_go ≔ AMOUNT_TEST_REQUESTS&#10;  end&#10;&#10;  event request&#10;    any microservice_response // represents wheather the microservice response or not&#10;        new_circuit_breaker // represents the new state of the circuit breaker&#10;        new_consecutive_errors // represents the new count of consecutive errors&#10;        new_timestamp_cb_trips // represents the timestap since when the circuit breaker trips&#10;        new_test_request_to_go // represents the remaining number of request to switch to the CLOSED state&#10;&#10;    where&#10;      @grd1 microservice_response ∈ BOOL&#10;      @grd2 new_circuit_breaker ∈ CIRCUIT_BREAKER_STATE&#10;      @grd3 new_consecutive_errors ∈ ℕ&#10;      @grd4 new_timestamp_cb_trips ∈ ℕ&#10;      @grd5 new_test_request_to_go ∈ ℕ&#10;      @grd6 circuit_breaker = CLOSED ∧ microservice_response = TRUE ⇒ new_consecutive_errors = 0&#10;      @grd7 circuit_breaker = CLOSED ∧ microservice_response = FALSE ⇒ new_consecutive_errors = consecutive_errors + 1&#10;      @grd8 circuit_breaker = CLOSED ∧ new_consecutive_errors ≥ THRESHOLD ⇒ new_circuit_breaker = OPEN ∧ new_timestamp_cb_trips = time&#10;      @grd9 circuit_breaker = CLOSED ∧ new_consecutive_errors &lt; THRESHOLD ⇒ new_circuit_breaker = CLOSED ∧ new_timestamp_cb_trips = timestamp_cb_trips&#10;      @grd10 circuit_breaker = CLOSED ⇒ new_test_request_to_go = AMOUNT_TEST_REQUESTS&#10;      @grd11 circuit_breaker = OPEN ⇒ new_circuit_breaker = OPEN ∧ new_consecutive_errors = 0 ∧ new_test_request_to_go = AMOUNT_TEST_REQUESTS ∧ new_timestamp_cb_trips = timestamp_cb_trips&#10;      @grd12 circuit_breaker = HALF_OPEN ∧ microservice_response = FALSE ⇒ new_circuit_breaker = OPEN ∧ new_test_request_to_go = AMOUNT_TEST_REQUESTS&#10;      @grd13 circuit_breaker = HALF_OPEN ∧ microservice_response = TRUE ⇒ new_test_request_to_go = test_request_to_go − 1&#10;      @grd14 circuit_breaker = HALF_OPEN ∧ microservice_response = TRUE ∧ new_test_request_to_go = 0 ⇒ new_circuit_breaker = CLOSED&#10;      @grd15 circuit_breaker = HALF_OPEN ∧ microservice_response = TRUE ∧ new_test_request_to_go &gt; 0 ⇒ new_circuit_breaker = HALF_OPEN&#10;      @grd16 circuit_breaker = HALF_OPEN ⇒ new_consecutive_errors = 0 ∧ new_timestamp_cb_trips = time&#10;    then&#10;      @act1 consecutive_errors ≔ new_consecutive_errors&#10;      @act2 circuit_breaker ≔ new_circuit_breaker&#10;      @act3 timestamp_cb_trips ≔ new_timestamp_cb_trips&#10;      @act4 test_request_to_go ≔ new_test_request_to_go&#10;  end&#10;&#10;  event clock&#10;    any new_circuit_breaker&#10;    where&#10;      @grd1 new_circuit_breaker ∈ CIRCUIT_BREAKER_STATE&#10;      @grd2 circuit_breaker = OPEN ∧ (time + 1 − timestamp_cb_trips = TIMEOUT_PERIOD) ⇒ new_circuit_breaker = HALF_OPEN&#10;      @grd3 circuit_breaker = OPEN ∧ (time + 1 − timestamp_cb_trips ≠ TIMEOUT_PERIOD) ⇒ new_circuit_breaker = circuit_breaker&#10;      @grd4 circuit_breaker = CLOSED ∨ circuit_breaker = HALF_OPEN ⇒ new_circuit_breaker = circuit_breaker&#10;    then&#10;      @act1 time ≔ time + 1&#10;      @act3 circuit_breaker ≔ new_circuit_breaker&#10;  end&#10;end&#10;" version="5">
    <org.eventb.core.seesContext name="_4yA40PjwEemEM56lwO95gA" org.eventb.core.target="c0_circuit_breaker"/>
    <org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="_20TO8PjwEemEM56lwO95gA" org.eventb.core.assignment="time ≔ 0" org.eventb.core.generated="false" org.eventb.core.label="init1"/>
        <org.eventb.core.action name="_20TO8fjwEemEM56lwO95gA" org.eventb.core.assignment="timestamp_cb_trips ≔ 0" org.eventb.core.generated="false" org.eventb.core.label="init2"/>
        <org.eventb.core.action name="_20TO8vjwEemEM56lwO95gA" org.eventb.core.assignment="consecutive_errors ≔ 0" org.eventb.core.generated="false" org.eventb.core.label="init3"/>
        <org.eventb.core.action name="_20TO8_jwEemEM56lwO95gA" org.eventb.core.assignment="circuit_breaker ≔ CLOSED" org.eventb.core.generated="false" org.eventb.core.label="init4"/>
        <org.eventb.core.action name="_20T2APjwEemEM56lwO95gA" org.eventb.core.assignment="test_request_to_go ≔ AMOUNT_TEST_REQUESTS" org.eventb.core.generated="false" org.eventb.core.label="init5"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="_20T2AfjwEemEM56lwO95gA" org.eventb.core.comment="represents the amount of consecutive errors" org.eventb.core.generated="false" org.eventb.core.identifier="consecutive_errors"/>
    <org.eventb.core.variable name="_20T2AvjwEemEM56lwO95gA" org.eventb.core.comment="represents the state of the circuit breaker" org.eventb.core.generated="false" org.eventb.core.identifier="circuit_breaker"/>
    <org.eventb.core.variable name="_20T2A_jwEemEM56lwO95gA" org.eventb.core.comment="represents current time, always moving forward" org.eventb.core.generated="false" org.eventb.core.identifier="time"/>
    <org.eventb.core.variable name="_stMC8PkaEemEM56lwO95gA" org.eventb.core.comment="represents the timestap since when the circuit breaker trips" org.eventb.core.generated="false" org.eventb.core.identifier="timestamp_cb_trips"/>
    <org.eventb.core.variable name="_20UdEfjwEemEM56lwO95gA" org.eventb.core.comment="represents the amount of test request that must respond ok during the HALF_OPEN state to switch to the CLOSED state" org.eventb.core.generated="false" org.eventb.core.identifier="test_request_to_go"/>
    <org.eventb.core.invariant name="_20UdEvjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="inv1" org.eventb.core.predicate="time ∈ ℕ"/>
    <org.eventb.core.invariant name="_20VEIPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="inv2" org.eventb.core.predicate="timestamp_cb_trips ∈ ℕ"/>
    <org.eventb.core.invariant name="_20VEIfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="inv3" org.eventb.core.predicate="consecutive_errors ∈ ℕ"/>
    <org.eventb.core.invariant name="_20VrMPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="inv4" org.eventb.core.predicate="circuit_breaker ∈ CIRCUIT_BREAKER_STATE"/>
    <org.eventb.core.invariant name="_20VrMfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="inv5" org.eventb.core.predicate="test_request_to_go ∈ ℕ"/>
    <org.eventb.core.event name="_20VrMvjwEemEM56lwO95gA" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="request">
        <org.eventb.core.parameter name="_20WSQPjwEemEM56lwO95gA" org.eventb.core.comment="represents wheather the microservice response or not" org.eventb.core.generated="false" org.eventb.core.identifier="microservice_response"/>
        <org.eventb.core.parameter name="_20WSQfjwEemEM56lwO95gA" org.eventb.core.comment="represents the new state of the circuit breaker" org.eventb.core.generated="false" org.eventb.core.identifier="new_circuit_breaker"/>
        <org.eventb.core.parameter name="_20W5UPjwEemEM56lwO95gA" org.eventb.core.comment="represents the new count of consecutive errors" org.eventb.core.generated="false" org.eventb.core.identifier="new_consecutive_errors"/>
        <org.eventb.core.parameter name="_RrSGYPkbEemEM56lwO95gA" org.eventb.core.comment="represents the timestap since when the circuit breaker trips" org.eventb.core.generated="false" org.eventb.core.identifier="new_timestamp_cb_trips"/>
        <org.eventb.core.parameter name="_20W5UvjwEemEM56lwO95gA" org.eventb.core.comment="represents the remaining number of request to switch to the CLOSED state" org.eventb.core.generated="false" org.eventb.core.identifier="new_test_request_to_go"/>
        <org.eventb.core.guard name="_20XgYPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="microservice_response ∈ BOOL"/>
        <org.eventb.core.guard name="_20XgYfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="new_circuit_breaker ∈ CIRCUIT_BREAKER_STATE"/>
        <org.eventb.core.guard name="_20XgYvjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="new_consecutive_errors ∈ ℕ"/>
        <org.eventb.core.guard name="_20YHcPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="new_timestamp_cb_trips ∈ ℕ"/>
        <org.eventb.core.guard name="_20YHcfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="new_test_request_to_go ∈ ℕ"/>
        <org.eventb.core.guard name="_20YugPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="circuit_breaker = CLOSED ∧ microservice_response = TRUE ⇒ new_consecutive_errors = 0"/>
        <org.eventb.core.guard name="_20YugfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd7" org.eventb.core.predicate="circuit_breaker = CLOSED ∧ microservice_response = FALSE ⇒ new_consecutive_errors = consecutive_errors + 1"/>
        <org.eventb.core.guard name="_20ZVkPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd8" org.eventb.core.predicate="circuit_breaker = CLOSED ∧ new_consecutive_errors ≥ THRESHOLD ⇒ new_circuit_breaker = OPEN ∧ new_timestamp_cb_trips = time"/>
        <org.eventb.core.guard name="_20ZVkfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd9" org.eventb.core.predicate="circuit_breaker = CLOSED ∧ new_consecutive_errors &lt; THRESHOLD ⇒ new_circuit_breaker = CLOSED ∧ new_timestamp_cb_trips = timestamp_cb_trips"/>
        <org.eventb.core.guard name="_20ZVkvjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd10" org.eventb.core.predicate="circuit_breaker = CLOSED ⇒ new_test_request_to_go = AMOUNT_TEST_REQUESTS"/>
        <org.eventb.core.guard name="_W6hV8PkcEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd11" org.eventb.core.predicate="circuit_breaker = OPEN ⇒ new_circuit_breaker = OPEN ∧ new_consecutive_errors = 0 ∧ new_test_request_to_go = AMOUNT_TEST_REQUESTS ∧ new_timestamp_cb_trips = timestamp_cb_trips"/>
        <org.eventb.core.guard name="_20Z8ofjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd12" org.eventb.core.predicate="circuit_breaker = HALF_OPEN ∧ microservice_response = FALSE ⇒ new_circuit_breaker = OPEN ∧ new_test_request_to_go = AMOUNT_TEST_REQUESTS"/>
        <org.eventb.core.guard name="_20ajsPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd13" org.eventb.core.predicate="circuit_breaker = HALF_OPEN ∧ microservice_response = TRUE ⇒ new_test_request_to_go = test_request_to_go − 1"/>
        <org.eventb.core.guard name="_20ajsfjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd14" org.eventb.core.predicate="circuit_breaker = HALF_OPEN ∧ microservice_response = TRUE ∧ new_test_request_to_go = 0 ⇒ new_circuit_breaker = CLOSED"/>
        <org.eventb.core.guard name="_20ajsvjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd15" org.eventb.core.predicate="circuit_breaker = HALF_OPEN ∧ microservice_response = TRUE ∧ new_test_request_to_go &gt; 0 ⇒ new_circuit_breaker = HALF_OPEN"/>
        <org.eventb.core.guard name="_20bKwPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd16" org.eventb.core.predicate="circuit_breaker = HALF_OPEN ⇒ new_consecutive_errors = 0 ∧ new_timestamp_cb_trips = time"/>
        <org.eventb.core.action name="_20bKwfjwEemEM56lwO95gA" org.eventb.core.assignment="consecutive_errors ≔ new_consecutive_errors" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_20bx0PjwEemEM56lwO95gA" org.eventb.core.assignment="circuit_breaker ≔ new_circuit_breaker" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_20bx0fjwEemEM56lwO95gA" org.eventb.core.assignment="timestamp_cb_trips ≔ new_timestamp_cb_trips" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="_20cY4PjwEemEM56lwO95gA" org.eventb.core.assignment="test_request_to_go ≔ new_test_request_to_go" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_20cY4fjwEemEM56lwO95gA" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="clock">
        <org.eventb.core.parameter name="_IpLB8Pj1EemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.identifier="new_circuit_breaker"/>
        <org.eventb.core.guard name="_20c_8fjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="new_circuit_breaker ∈ CIRCUIT_BREAKER_STATE"/>
        <org.eventb.core.guard name="_20c_8vjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="circuit_breaker = OPEN ∧ (time + 1 − timestamp_cb_trips = TIMEOUT_PERIOD) ⇒ new_circuit_breaker = HALF_OPEN"/>
        <org.eventb.core.guard name="_20dnAPjwEemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="circuit_breaker = OPEN ∧ (time + 1 − timestamp_cb_trips ≠ TIMEOUT_PERIOD) ⇒ new_circuit_breaker = circuit_breaker"/>
        <org.eventb.core.guard name="_WWUR8Pj2EemEM56lwO95gA" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="circuit_breaker = CLOSED ∨ circuit_breaker = HALF_OPEN ⇒ new_circuit_breaker = circuit_breaker"/>
        <org.eventb.core.action name="_20dnAvjwEemEM56lwO95gA" org.eventb.core.assignment="time ≔ time + 1" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_IpMQEPj1EemEM56lwO95gA" org.eventb.core.assignment="circuit_breaker ≔ new_circuit_breaker" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
</org.eventb.core.machineFile>
