/* Constants
   AMOUNT_TEST_REQUESTS = 3
 & THRESHOLD = 3
 & TIMEOUT_PERIOD = 2
*/
/* Initialisation */
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 0
 & timestamp_cb_trips = 0
*/
clock(CLOSED);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 1
 & timestamp_cb_trips = 0
*/
request(TRUE,CLOSED,0,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 1
 & timestamp_cb_trips = 0
*/
request(TRUE,CLOSED,0,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 1
 & timestamp_cb_trips = 0
*/
request(FALSE,CLOSED,1,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 1
 & test_request_to_go = 3
 & time = 1
 & timestamp_cb_trips = 0
*/
request(FALSE,CLOSED,2,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 2
 & test_request_to_go = 3
 & time = 1
 & timestamp_cb_trips = 0
*/
clock(CLOSED);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 2
 & test_request_to_go = 3
 & time = 2
 & timestamp_cb_trips = 0
*/
request(TRUE,CLOSED,0,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 2
 & timestamp_cb_trips = 0
*/
clock(CLOSED);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 3
 & timestamp_cb_trips = 0
*/
request(TRUE,CLOSED,0,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 3
 & timestamp_cb_trips = 0
*/
clock(CLOSED);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 4
 & timestamp_cb_trips = 0
*/
request(FALSE,CLOSED,1,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 1
 & test_request_to_go = 3
 & time = 4
 & timestamp_cb_trips = 0
*/
clock(CLOSED);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 1
 & test_request_to_go = 3
 & time = 5
 & timestamp_cb_trips = 0
*/
request(TRUE,CLOSED,0,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 5
 & timestamp_cb_trips = 0
*/
request(FALSE,CLOSED,1,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 1
 & test_request_to_go = 3
 & time = 5
 & timestamp_cb_trips = 0
*/
request(FALSE,CLOSED,2,3,0);
/* Variables
   circuit_breaker = CLOSED
 & consecutive_errors = 2
 & test_request_to_go = 3
 & time = 5
 & timestamp_cb_trips = 0
*/
request(FALSE,OPEN,3,3,5);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 3
 & test_request_to_go = 3
 & time = 5
 & timestamp_cb_trips = 5
*/
clock(OPEN);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 3
 & test_request_to_go = 3
 & time = 6
 & timestamp_cb_trips = 5
*/
request(TRUE,OPEN,0,3,5);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 6
 & timestamp_cb_trips = 5
*/
clock(HALF_OPEN);
/* Variables
   circuit_breaker = HALF_OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 7
 & timestamp_cb_trips = 5
*/
clock(HALF_OPEN);
/* Variables
   circuit_breaker = HALF_OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 8
 & timestamp_cb_trips = 5
*/
request(TRUE,HALF_OPEN,0,2,8);
/* Variables
   circuit_breaker = HALF_OPEN
 & consecutive_errors = 0
 & test_request_to_go = 2
 & time = 8
 & timestamp_cb_trips = 8
*/
request(TRUE,HALF_OPEN,0,1,8);
/* Variables
   circuit_breaker = HALF_OPEN
 & consecutive_errors = 0
 & test_request_to_go = 1
 & time = 8
 & timestamp_cb_trips = 8
*/
request(FALSE,OPEN,0,3,8);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 8
 & timestamp_cb_trips = 8
*/
request(FALSE,OPEN,0,3,8);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 8
 & timestamp_cb_trips = 8
*/
request(FALSE,OPEN,0,3,8);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 8
 & timestamp_cb_trips = 8
*/
clock(OPEN);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 9
 & timestamp_cb_trips = 8
*/
request(FALSE,OPEN,0,3,8);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 9
 & timestamp_cb_trips = 8
*/
request(TRUE,OPEN,0,3,8);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 9
 & timestamp_cb_trips = 8
*/
request(TRUE,OPEN,0,3,8);
/* Variables
   circuit_breaker = OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 9
 & timestamp_cb_trips = 8
*/
clock(HALF_OPEN)
/* Variables
   circuit_breaker = HALF_OPEN
 & consecutive_errors = 0
 & test_request_to_go = 3
 & time = 10
 & timestamp_cb_trips = 8
*/
